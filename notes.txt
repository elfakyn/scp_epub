- refactor to pkgutil.get_data
- bs4


Elements we definitely don't want:
* class = page-rate-widget-box
* class = heritage-rating-module (this one aligns to right, nope)
* class = footer-wikiwalk-nav


PRETTIFY PAGE (what pyscp does):


For local links:
* WIKIDOT DOCS: the site-unix-name consists of only alphanumeric characters (0..9, 'a'..'z') and ('-')
*
* todo: test for it


COMPONENTS:

[DONE] 1. download all pages
	[DONE] * downloader with cache support
	[DONE] * FILTER LIST OF PAGES: ONLY USE tagged 'scp', 'tale', or 'hub'.
	[DONE] * wget and attach html of pages -- this will cause correct rendering as seen on the site.
	[DONE] * Just manually create the html for scp-3125 and pop it in the thing.

2. PRETTIFY SINGLE PAGE
* NOTE:
	[NO, UNLESS NECESSARY] * delete the div that aligns right and is at the very beginning of every page ( should we do this? what if there's a page that doesn't have that div but has another one instead with actual content)
[DONE] * WHAT PYSCP DOES (MAKE COMPATIBLE):
	[DONE] * remove widget box
	[DONE] * yui-navset
	[DONE] * collapsible-block
	[DONE] * footnoteref, footnote footer: BREAK COMPATIBILITY WITH PYSCP, MAKE NICE FOR EPUB
	[DONE] * blockquote
	[DONE] * links
	[DONE] * images
	[DONE] * title
* Put them all together to parse a whole page
	[DONE] * Component test that correctly parses whole web html files
	* Error handling: e.g. each item in its own try-catch with logging of errors
		* If any parsing step errors out, continue without executing that step.
		* How to make each step atomic? Do we want each step to be atomic? What happens if it fails right in the middle?
		* Log errors verbosely, exactly what failed and how
		* Platform test: parse LITERALLY ALL THE SCP PAGES and test that none fail, or <N fail.
	[DONE] * I want some sort of test that the output of the combined parsers makes sense. Even if just a regression test.
* Wrapper function that returns the converted html along with any metadata needed by the assembly function.


3. ARRANGE BOOK:
	* ORDER FOR TOC (check if files also need to be ordered):
		* FOREWORD ON EBOOK EDITION
		* TOC
		* INTRO
		* HUBS
			* SCPS BY SERIES
				* (no toc) SERIES 1 scps, SERIES 2 scps...
				* (no toc) SERIES 1 tales, SERIES 2 tales, ...
			* all other hubs alphabetically
				* (no toc) list here
		* SCP SERIES 1
			* 1-100
				* (no toc) 1
				* (no toc) 2
				* ...
			* 101-200
			* ...
		* SCP SERIES 2
		* SCP SERIES ...
		* ALL OTHER SCPs (supplements?)
		* TALES
			* TALES 0-9
			* TALES A
				* (no toc): tales go here
			* TALES B
			* ...
			* TALES Z
			* Remaining tales
		* INDICES:
			* Index of hubs
			* Index of SCPs
			* Index of Tales
		* CREDITS

4. add book metadata,
	* title, authors etc.
	* cover photo
	* CSS
		* fix weird right align if not already fixed

5. render

===================
Long-term:
 * add support for images
 * option for smaller books, selections of stuff
